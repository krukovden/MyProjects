#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.17929
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SportTest
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Kursach_sport")]
	public partial class DataLINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertAbonement(Abonement instance);
    partial void UpdateAbonement(Abonement instance);
    partial void DeleteAbonement(Abonement instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertCoach(Coach instance);
    partial void UpdateCoach(Coach instance);
    partial void DeleteCoach(Coach instance);
    partial void InsertHistory_buy(History_buy instance);
    partial void UpdateHistory_buy(History_buy instance);
    partial void DeleteHistory_buy(History_buy instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertVisiting(Visiting instance);
    partial void UpdateVisiting(Visiting instance);
    partial void DeleteVisiting(Visiting instance);
    #endregion
		
		public DataLINQDataContext() : 
				base(global::SportTest.Properties.Settings.Default.Kursach_sportConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataLINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Abonement> Abonement
		{
			get
			{
				return this.GetTable<Abonement>();
			}
		}
		
		public System.Data.Linq.Table<Client> Client
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Coach> Coach
		{
			get
			{
				return this.GetTable<Coach>();
			}
		}
		
		public System.Data.Linq.Table<History_buy> History_buy
		{
			get
			{
				return this.GetTable<History_buy>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<Visiting> Visiting
		{
			get
			{
				return this.GetTable<Visiting>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Abonement")]
	public partial class Abonement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<System.TimeSpan> _limit_Enter;
		
		private System.Nullable<System.TimeSpan> _limit_Exit;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<History_buy> _History_buy;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onlimit_EnterChanging(System.Nullable<System.TimeSpan> value);
    partial void Onlimit_EnterChanged();
    partial void Onlimit_ExitChanging(System.Nullable<System.TimeSpan> value);
    partial void Onlimit_ExitChanged();
    #endregion
		
		public Abonement()
		{
			this._Client = default(EntityRef<Client>);
			this._History_buy = default(EntityRef<History_buy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if ((this._Client.HasLoadedOrAssignedValue || this._History_buy.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_limit_Enter", DbType="Time")]
		public System.Nullable<System.TimeSpan> limit_Enter
		{
			get
			{
				return this._limit_Enter;
			}
			set
			{
				if ((this._limit_Enter != value))
				{
					this.Onlimit_EnterChanging(value);
					this.SendPropertyChanging();
					this._limit_Enter = value;
					this.SendPropertyChanged("limit_Enter");
					this.Onlimit_EnterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_limit_Exit", DbType="Time")]
		public System.Nullable<System.TimeSpan> limit_Exit
		{
			get
			{
				return this._limit_Exit;
			}
			set
			{
				if ((this._limit_Exit != value))
				{
					this.Onlimit_ExitChanging(value);
					this.SendPropertyChanging();
					this._limit_Exit = value;
					this.SendPropertyChanged("limit_Exit");
					this.Onlimit_ExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Abonement", Storage="_Client", ThisKey="id", OtherKey="id_abonement", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Abonement.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Abonement.Add(this);
						this._id = value.id_abonement;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="History_buy_Abonement", Storage="_History_buy", ThisKey="id", OtherKey="id_abonement", IsForeignKey=true)]
		public History_buy History_buy
		{
			get
			{
				return this._History_buy.Entity;
			}
			set
			{
				History_buy previousValue = this._History_buy.Entity;
				if (((previousValue != value) 
							|| (this._History_buy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._History_buy.Entity = null;
						previousValue.Abonement.Remove(this);
					}
					this._History_buy.Entity = value;
					if ((value != null))
					{
						value.Abonement.Add(this);
						this._id = value.id_abonement;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("History_buy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_abonement;
		
		private System.Nullable<int> _counts;
		
		private System.Nullable<System.DateTime> _limit_date;
		
		private int _id_user;
		
		private EntitySet<Abonement> _Abonement;
		
		private EntitySet<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_abonementChanging(int value);
    partial void Onid_abonementChanged();
    partial void OncountsChanging(System.Nullable<int> value);
    partial void OncountsChanged();
    partial void Onlimit_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onlimit_dateChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    #endregion
		
		public Client()
		{
			this._Abonement = new EntitySet<Abonement>(new Action<Abonement>(this.attach_Abonement), new Action<Abonement>(this.detach_Abonement));
			this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_abonement", DbType="Int NOT NULL")]
		public int id_abonement
		{
			get
			{
				return this._id_abonement;
			}
			set
			{
				if ((this._id_abonement != value))
				{
					this.Onid_abonementChanging(value);
					this.SendPropertyChanging();
					this._id_abonement = value;
					this.SendPropertyChanged("id_abonement");
					this.Onid_abonementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counts", DbType="Int")]
		public System.Nullable<int> counts
		{
			get
			{
				return this._counts;
			}
			set
			{
				if ((this._counts != value))
				{
					this.OncountsChanging(value);
					this.SendPropertyChanging();
					this._counts = value;
					this.SendPropertyChanged("counts");
					this.OncountsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_limit_date", DbType="Date")]
		public System.Nullable<System.DateTime> limit_date
		{
			get
			{
				return this._limit_date;
			}
			set
			{
				if ((this._limit_date != value))
				{
					this.Onlimit_dateChanging(value);
					this.SendPropertyChanging();
					this._limit_date = value;
					this.SendPropertyChanged("limit_date");
					this.Onlimit_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Abonement", Storage="_Abonement", ThisKey="id_abonement", OtherKey="id")]
		public EntitySet<Abonement> Abonement
		{
			get
			{
				return this._Abonement;
			}
			set
			{
				this._Abonement.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Users", Storage="_Users", ThisKey="id_user", OtherKey="id")]
		public EntitySet<Users> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Abonement(Abonement entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Abonement(Abonement entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coach")]
	public partial class Coach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _lave;
		
		private int _id_user;
		
		private EntitySet<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlaveChanging(System.Nullable<decimal> value);
    partial void OnlaveChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    #endregion
		
		public Coach()
		{
			this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lave", DbType="Money")]
		public System.Nullable<decimal> lave
		{
			get
			{
				return this._lave;
			}
			set
			{
				if ((this._lave != value))
				{
					this.OnlaveChanging(value);
					this.SendPropertyChanging();
					this._lave = value;
					this.SendPropertyChanged("lave");
					this.OnlaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coach_Users", Storage="_Users", ThisKey="id_user", OtherKey="id")]
		public EntitySet<Users> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Coach = this;
		}
		
		private void detach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Coach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.History_buy")]
	public partial class History_buy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _price;
		
		private int _id_abonement;
		
		private System.Nullable<System.DateTime> _dates;
		
		private int _id_user;
		
		private EntitySet<Abonement> _Abonement;
		
		private EntitySet<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void Onid_abonementChanging(int value);
    partial void Onid_abonementChanged();
    partial void OndatesChanging(System.Nullable<System.DateTime> value);
    partial void OndatesChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    #endregion
		
		public History_buy()
		{
			this._Abonement = new EntitySet<Abonement>(new Action<Abonement>(this.attach_Abonement), new Action<Abonement>(this.detach_Abonement));
			this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_abonement", DbType="Int NOT NULL")]
		public int id_abonement
		{
			get
			{
				return this._id_abonement;
			}
			set
			{
				if ((this._id_abonement != value))
				{
					this.Onid_abonementChanging(value);
					this.SendPropertyChanging();
					this._id_abonement = value;
					this.SendPropertyChanged("id_abonement");
					this.Onid_abonementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dates", DbType="Date")]
		public System.Nullable<System.DateTime> dates
		{
			get
			{
				return this._dates;
			}
			set
			{
				if ((this._dates != value))
				{
					this.OndatesChanging(value);
					this.SendPropertyChanging();
					this._dates = value;
					this.SendPropertyChanged("dates");
					this.OndatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="History_buy_Abonement", Storage="_Abonement", ThisKey="id_abonement", OtherKey="id")]
		public EntitySet<Abonement> Abonement
		{
			get
			{
				return this._Abonement;
			}
			set
			{
				this._Abonement.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="History_buy_Users", Storage="_Users", ThisKey="id_user", OtherKey="id")]
		public EntitySet<Users> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Abonement(Abonement entity)
		{
			this.SendPropertyChanging();
			entity.History_buy = this;
		}
		
		private void detach_Abonement(Abonement entity)
		{
			this.SendPropertyChanging();
			entity.History_buy = null;
		}
		
		private void attach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.History_buy = this;
		}
		
		private void detach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.History_buy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<int> _number_card;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _gender;
		
		private string _email;
		
		private string _tel;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Coach> _Coach;
		
		private EntityRef<History_buy> _History_buy;
		
		private EntityRef<Visiting> _Visiting;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onnumber_cardChanging(System.Nullable<int> value);
    partial void Onnumber_cardChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    #endregion
		
		public Users()
		{
			this._Client = default(EntityRef<Client>);
			this._Coach = default(EntityRef<Coach>);
			this._History_buy = default(EntityRef<History_buy>);
			this._Visiting = default(EntityRef<Visiting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if ((((this._Client.HasLoadedOrAssignedValue || this._Coach.HasLoadedOrAssignedValue) 
								|| this._History_buy.HasLoadedOrAssignedValue) 
								|| this._Visiting.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number_card", DbType="Int")]
		public System.Nullable<int> number_card
		{
			get
			{
				return this._number_card;
			}
			set
			{
				if ((this._number_card != value))
				{
					this.Onnumber_cardChanging(value);
					this.SendPropertyChanging();
					this._number_card = value;
					this.SendPropertyChanged("number_card");
					this.Onnumber_cardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(20)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="VarChar(20)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Users", Storage="_Client", ThisKey="id", OtherKey="id_user", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._id = value.id_user;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coach_Users", Storage="_Coach", ThisKey="id", OtherKey="id_user", IsForeignKey=true)]
		public Coach Coach
		{
			get
			{
				return this._Coach.Entity;
			}
			set
			{
				Coach previousValue = this._Coach.Entity;
				if (((previousValue != value) 
							|| (this._Coach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Coach.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Coach.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._id = value.id_user;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Coach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="History_buy_Users", Storage="_History_buy", ThisKey="id", OtherKey="id_user", IsForeignKey=true)]
		public History_buy History_buy
		{
			get
			{
				return this._History_buy.Entity;
			}
			set
			{
				History_buy previousValue = this._History_buy.Entity;
				if (((previousValue != value) 
							|| (this._History_buy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._History_buy.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._History_buy.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._id = value.id_user;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("History_buy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visiting_Users", Storage="_Visiting", ThisKey="id", OtherKey="id_user", IsForeignKey=true)]
		public Visiting Visiting
		{
			get
			{
				return this._Visiting.Entity;
			}
			set
			{
				Visiting previousValue = this._Visiting.Entity;
				if (((previousValue != value) 
							|| (this._Visiting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visiting.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Visiting.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._id = value.id_user;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Visiting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visiting")]
	public partial class Visiting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _dateEnter;
		
		private System.Nullable<System.DateTime> _deteExit;
		
		private int _id_user;
		
		private EntitySet<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateEnterChanging(System.Nullable<System.DateTime> value);
    partial void OndateEnterChanged();
    partial void OndeteExitChanging(System.Nullable<System.DateTime> value);
    partial void OndeteExitChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    #endregion
		
		public Visiting()
		{
			this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateEnter", DbType="Date")]
		public System.Nullable<System.DateTime> dateEnter
		{
			get
			{
				return this._dateEnter;
			}
			set
			{
				if ((this._dateEnter != value))
				{
					this.OndateEnterChanging(value);
					this.SendPropertyChanging();
					this._dateEnter = value;
					this.SendPropertyChanged("dateEnter");
					this.OndateEnterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deteExit", DbType="Date")]
		public System.Nullable<System.DateTime> deteExit
		{
			get
			{
				return this._deteExit;
			}
			set
			{
				if ((this._deteExit != value))
				{
					this.OndeteExitChanging(value);
					this.SendPropertyChanging();
					this._deteExit = value;
					this.SendPropertyChanged("deteExit");
					this.OndeteExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visiting_Users", Storage="_Users", ThisKey="id_user", OtherKey="id")]
		public EntitySet<Users> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Visiting = this;
		}
		
		private void detach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Visiting = null;
		}
	}
}
#pragma warning restore 1591
